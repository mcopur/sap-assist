basePath: /api/v1
definitions:
  models.LeaveRequest:
    properties:
      created_at:
        type: string
      end_date:
        type: string
      id:
        type: integer
      leave_type:
        type: string
      reason:
        type: string
      start_date:
        type: string
      status:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  models.PurchaseRequest:
    properties:
      created_at:
        type: string
      estimated_cost:
        type: number
      id:
        type: integer
      item_name:
        type: string
      quantity:
        type: integer
      reason:
        type: string
      status:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      role:
        enum:
        - admin
        - user
        type: string
      updated_at:
        type: string
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - email
    - first_name
    - last_name
    - role
    - username
    type: object
  utils.ErrorResponse:
    properties:
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for SAP Assist application.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: SAP Assist API
  version: "1.0"
paths:
  /leave-requests:
    post:
      consumes:
      - application/json
      description: Create a new leave request with the input payload
      parameters:
      - description: Create leave request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.LeaveRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.LeaveRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Create a new leave request
      tags:
      - leave-requests
  /leave-requests/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a leave request by its ID
      parameters:
      - description: Leave Request ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Delete a leave request
      tags:
      - leave-requests
    get:
      consumes:
      - application/json
      description: Get a leave request by its ID
      parameters:
      - description: Leave Request ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LeaveRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Get a leave request by ID
      tags:
      - leave-requests
    put:
      consumes:
      - application/json
      description: Update a leave request with the input payload
      parameters:
      - description: Leave Request ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update leave request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.LeaveRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LeaveRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Update a leave request
      tags:
      - leave-requests
  /purchase-requests:
    post:
      consumes:
      - application/json
      description: Create a new purchase request with the input payload
      parameters:
      - description: Create purchase request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.PurchaseRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.PurchaseRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Create a new purchase request
      tags:
      - purchase-requests
  /purchase-requests/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a purchase request by its ID
      parameters:
      - description: Purchase Request ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Delete a purchase request
      tags:
      - purchase-requests
    get:
      consumes:
      - application/json
      description: Get a purchase request by its ID
      parameters:
      - description: Purchase Request ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PurchaseRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Get a purchase request by ID
      tags:
      - purchase-requests
    put:
      consumes:
      - application/json
      description: Update a purchase request with the input payload
      parameters:
      - description: Purchase Request ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update purchase request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.PurchaseRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PurchaseRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Update a purchase request
      tags:
      - purchase-requests
  /users:
    post:
      consumes:
      - application/json
      description: Create a new user with the input payload
      parameters:
      - description: Create user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Delete a user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Get a user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a user with the input payload
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Update a user
      tags:
      - users
  /users/{userId}/leave-requests:
    get:
      consumes:
      - application/json
      description: Get all leave requests for a specific user
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Number of items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.LeaveRequest'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Get leave requests by user ID
      tags:
      - leave-requests
  /users/{userId}/purchase-requests:
    get:
      consumes:
      - application/json
      description: Get all purchase requests for a specific user
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Number of items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.PurchaseRequest'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Get purchase requests by user ID
      tags:
      - purchase-requests
swagger: "2.0"
